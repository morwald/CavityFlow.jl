@testset "linearstability.jl" begin
    @testset "f_linearstability" begin
        # Test nonlinear operator of generalized eigenvalue problem
        n = 6
        Re = 100
        p = CavityFlow.setup_params(n, Re)

        u = ones((n - 3) * (n - 3))
        fu = similar(u)
        @inbounds @views p.Ψ[3:(n - 1), 3:(n - 1)][:] .= u
        CavityFlow.construct_BC!(p)
        p.Ψ0 .= p.Ψ

        p.Ψ = zeros(n + 1, n + 1)
        p.Ψ[3, 3] = 1.0
        CavityFlow.construct_homogenous_BC!(p)

        CavityFlow.f_linearstability!(fu, p)

        fu_ref = [16.579816326404938
                  76.437561827493312
                  -60.336563332730819
                  -72.518632777599706
                  1.011358024691360
                  1.686967383906907
                  49.348674989368085
                  -2.658711628438755
                  0.364411856336847]

        @test fu ≈ fu_ref
    end
    @testset "linearstability_matrices!" begin
        # Test creation of matrices A, B for the generalized eigenvalue problem
        n = 6
        Re = 100
        p = CavityFlow.setup_params(n, Re)

        dim = (n - 3) * (n - 3)
        u = ones(dim)
        A = zeros(dim, dim)
        B = zeros(dim, dim)

        CavityFlow.linearstability_matrices!(A, B, u, p)

        Aref = [16.5798163264049 -102.42102244062 61.924711480879 75.6207637841028 5.28708755676325 -5.61987168432635 -47.76052684122 2.63012831567366 0.364411856336849
                76.4375618274933 8.02666666666673 -83.7699075065057 -12.8219195766347 -3.24000000000003 14.9552529099681 2.27945236917951 0.746666666666672 -2.65871162843876
                -60.3365633327308 95.4076891072863 1.25327009334807 5.21987168432636 -3.03708755676327 -82.634097117436 -0.293300745225742 -3.03012831567365 49.348674989368
                -72.5186327775997 11.6225248678097 -2.06622664316617 8.02666666666661 -3.23999999999996 0.746666666666651 65.1862870985874 -9.4891915344764 1.68696738390692
                1.01135802469136 -3.41333333333331 1.01135802469136 -3.41333333333335 7.2 -3.41333333333332 1.01135802469136 -3.41333333333335 1.01135802469136
                1.68696738390691 -9.48919153447638 65.1862870985873 0.746666666666674 -3.24000000000003 8.02666666666672 -2.06622664316617 11.6225248678097 -72.5186327775996
                49.3486749893681 -3.03012831567367 -0.293300745225734 -82.6340971174362 -3.03708755676321 5.21987168432634 1.25327009334823 95.4076891072862 -60.3365633327308
                -2.65871162843875 0.74666666666666 2.2794523691795 14.955252909968 -3.23999999999997 -12.8219195766347 -83.7699075065056 8.0266666666666 76.4375618274933
                0.364411856336847 2.63012831567366 -47.7605268412199 -5.61987168432634 5.28708755676323 75.6207637841027 61.9247114808789 -102.421022440619 16.5798163264049]

        Bref = [-27.5555555555556 7.5 -1.33333333333333 7.5 0 0 -1.33333333333333 0 0
                7.11111111111112 -25.7777777777778 7.11111111111111 0 7.5 0 0 -1.33333333333333 0
                -1.33333333333333 7.49999999999999 -27.5555555555556 0 0 7.5 0 0 -1.33333333333333
                7.11111111111112 0 0 -25.7777777777778 7.5 -1.33333333333333 7.11111111111111 0 0
                0 7.11111111111112 0 7.11111111111112 -24 7.11111111111111 0 7.11111111111111 0
                0 0 7.11111111111112 -1.33333333333333 7.49999999999999 -25.7777777777778 0 0 7.11111111111111
                -1.33333333333333 0 0 7.49999999999999 0 0 -27.5555555555556 7.5 -1.33333333333333
                0 -1.33333333333333 0 0 7.49999999999999 0 7.11111111111112 -25.7777777777778 7.11111111111111
                0 0 -1.33333333333333 0 0 7.49999999999999 -1.33333333333333 7.49999999999999 -27.5555555555556]

        @test A ≈ Aref
        @test B ≈ Bref
    end
    @testset "linearstability_lambdas! and linearstability_lambdamax" begin
        # Test creation of matrices A, B for the generalized eigenvalue problem
        n = 6
        Re = 100
        p = CavityFlow.setup_params(n, Re)

        dim = (n - 3) * (n - 3)
        u = ones(dim)
        λ = similar(u)
        A = zeros(dim, dim)
        B = zeros(dim, dim)

        CavityFlow.linearstability_lambdas!(λ, u, p)
        λmax = CavityFlow.linearstability_lambdamax(Re, u, p)

        λref = [-0.135715953331695
                -0.214138856818600
                -0.214138856818600
                -0.239342607885019
                -0.270941697750084
                -0.270941697750084
                -0.347708607370327
                -0.347708607370327
                -0.439878235841015]

        @test λ ≈ λref
        @test λmax ≈ λref[1]
    end
end
